Task2 <- function(N,l,d){
a <- 0
b <- pi
U <- runif(N)
theta <- (b-a)*U+a
f <- l*sin(theta)
integralet <- sum((f/N))*(b-a) #the estiamtion
Phit<- integralet/(pi*d)
pie <- (2*l)/(Phit*d)
return(pie)
}
buffon <- function(N,l,d){
a <- 0
b <- pi
U <- runif(N)
theta <- (b-a)*U+a
f <- l*sin(theta)
integralet <- sum((f/N))*(b-a) #the estiamtion
Phit<- integralet/(pi*d)
pie <- (2*l)/(Phit*d)
return(pie)
}
buffon(10000,1,1)
buffon <- function(N,l,d){
a <- 0
b <- pi
U <- runif(N)
theta <- (b-a)*U+a
f <- l*sin(theta)
integralet <- sum((f/N))*(b-a) #the estiamtion
Phit<- integralet/(pi*d)
pie <- (2*l)/(Phit*d)
return(paste("Estimated pi",pie))
}
buffon(10000,1,1)
estpi <- 0
for (i in seq(1, 10000, 10)) {
estpi[i]<-Task2(i,1,1)
print(Task2(i,1,1))
}
plot(estpi)
lazzarini <- 0
for(i in seq(1,10000,1)){
lazzarini[i] <- buffon(3408,2.5,3)
}
plot(lazzarini)
estpi <- 0
for (i in seq(1, 10000, 10)) {
estpi[i]<-buffon(i,1,1)
}
plot(estpi)
#opgave 1
integralet <- 0
N <- 10000
l <- 1
d <- 1
# estimating the integration
for (i in 1:N) {
a <- 0
b <- pi
U <- runif(N)
theta <- (b-a)*U+a
f <- l*sin(theta)
integralet[i] <- sum((f/N))*(b-a) #the estiamtion
Phit<- integralet[i]/(pi*d)
pie <- (2*l)/(Phit*d)
}
#Variance
varians <- var(integralet)
print(varians)
#Standard Deviation
deviation <- sd(integralet)
print(deviation)
#Standard Error
error <- deviation/(sqrt(N))
print(error)
#the 95% confidence interval
alfa = 0.05
plus <- integralet + qnorm(1-(alfa/2))*error
minus <- integralet - qnorm(1-(alfa/2))*error
print(c(mean(minus),mean(plus)))
#print(mean(minus))
#Opgave 2
Task2 <- function(N,l,d){
a <- 0
b <- pi
U <- runif(N)
theta <- (b-a)*U+a
f <- l*sin(theta)
integralet <- sum((f/N))*(b-a) #the estiamtion
Phit<- integralet/(pi*d)
pie <- (2*l)/(Phit*d)
return(pie)
}
#Opgave 3
estpi <- 0
for (i in seq(1, 10000, 10)) {
estpi[i]<-Task2(i,1,1)
#print(Task2(i,1,1))
}
plot(estpi)
#Opgave 4
lazzarini <- 0
for(i in seq(1,10000,1)){
lazzarini[i] <- Task2(3408,2.5,3)
}
plot(lazzarini)
#opgave 1
integralet <- 0
N <- 10000
l <- 1
d <- 1
# estimating the integration
for (i in 1:N) {
a <- 0
b <- pi
U <- runif(N)
theta <- (b-a)*U+a
f <- l*sin(theta)
integralet[i] <- sum((f/N))*(b-a) #the estiamtion
Phit<- integralet[i]/(pi*d)
pie <- (2*l)/(Phit*d)
}
#Variance
varians <- var(integralet)
print(varians)
#Standard Deviation
deviation <- sd(integralet)
print(deviation)
#Standard Error
error <- deviation/(sqrt(N))
print(error)
#the 95% confidence interval
alfa = 0.05
plus <- integralet + qnorm(1-(alfa/2))*error
minus <- integralet - qnorm(1-(alfa/2))*error
print(c(mean(minus),mean(plus)))
#print(mean(minus))
#Opgave 2
Task2 <- function(N,l,d){
a <- 0
b <- pi
U <- runif(N)
theta <- (b-a)*U+a
f <- l*sin(theta)
integralet <- sum((f/N))*(b-a) #the estiamtion
Phit<- integralet/(pi*d)
pie <- (2*l)/(Phit*d)
return(pie)
}
#Opgave 3
estpi <- 0
for (i in seq(1, 10000, 10)) {
estpi[i]<-Task2(i,1,1)
#print(Task2(i,1,1))
}
plot(estpi)
#Opgave 4
lazzarini <- 0
for(i in seq(1,10000,1)){
lazzarini[i] <- Task2(3408,2.5,3)
}
plot(lazzarini)
Task3.1 <-function(x, df, n){
set.seed(13)
summ <- 0
Y <- 0
for (i in 1:df) {
Y <- rnorm(n, mean=0, sd=1)
Yianden <- Y^2
summ <- summ + Yianden
}
blup <- ecdf(summ)
plot(blup)
p <-1-blup(x)
return(p)
}
Task3.1(10,4,100)
data <- read.table("soccer.txt", header = TRUE)
GoodnessOfFit <- function(x,p=c(rep(1/length(x),length(x)))){
set.seed(13)
n<-301
Exp<-n*p
Pearson<-((x-Exp)^2/Exp)
GOF<-sum(Pearson,na.rm = FALSE)
return(GOF)
}
data <- read.table("soccer.txt", header = TRUE)
x<-data$Number
GoodnessOfFit(x)
getwd()
ls
ls()
getwd()
data <- read.table("sport.txt", header = TRUE)
URL <- "https://raw.githubusercontent.com/haghish/ST516/master/data/soccer.txt"
data <- read.table(URL, header = TRUE)
x <- data$Sport
y <- data$Grades
head(data)
URL <- "https://raw.githubusercontent.com/haghish/ST516/master/data/gum.txt"
data <- read.table("sport.txt", header = TRUE)
x <- data$Sport
y <- data$Grades
URL <- "https://raw.githubusercontent.com/haghish/ST516/master/data/gum.txt"
data <- read.table(URL, header = TRUE)
x <- data$Sport
y <- data$Grades
head(data)
URL <- "https://raw.githubusercontent.com/haghish/ST516/master/data/sport.txt"
data <- read.table(URL, header = TRUE)
head(data)
x <- data$Sport
y <- data$Grades
chi.probability <-function(x, df, n){
set.seed(13)
summ <- 0
Y <- 0
for (i in 1:df) {
Y <- rnorm(n, mean=0, sd=1)
Yianden <- Y^2
summ <- summ + Yianden
}
blup <- ecdf(summ)
plot(blup)
p <-1-blup(x)
return(p)
}
chi.probability(10,4,100)
GoodnessOfFit <- function(x,p=c(rep(1/length(x),length(x)))){
set.seed(13)
n<-301
Exp<-n*p
Pearson<-((x-Exp)^2/Exp)
GOF<-sum(Pearson,na.rm = FALSE)
return(GOF)
}
URL <- "https://raw.githubusercontent.com/haghish/ST516/master/data/soccer.txt"
data <- read.table(URL, header = TRUE)
x<-data$Number
GOFit<-GoodnessOfFit(x)
chi.probability(GOFit,length(x)-1,1000)
1-pchisq(GOFit,length(x)-1)
URL <- "https://raw.githubusercontent.com/haghish/ST516/master/data/soccer.txt"
data <- read.table(URL, header = TRUE)
x<-data$Number
p<-data$expected
GOFit<-GoodnessOfFit(x,p)
chi.probability(GOFit,length(x)-1,1000)
integralet <- 0
N <- 10000
l <- 1
d <- 1
# estimating the integration
for (i in 1:N) {
a <- 0
b <- pi
U <- runif(N)
theta <- (b-a)*U+a
f <- l*sin(theta)
integralet[i] <- sum((f/N))*(b-a) #the estiamtion
Phit<- integralet[i]/(pi*d)
pie <- (2*l)/(Phit*d)
}
#Variance
varians <- var(integralet)
print(paste("Variance:", varians))
#Standard Deviation
deviation <- sd(integralet)
print(paste("Standard deviation:", deviation))
#Standard Error
error <- deviation/(sqrt(N))
print(paste("Standard error:", error))
#the 95% confidence interval
alfa = 0.05
plus <- integralet + qnorm(1-(alfa/2))*error
minus <- integralet - qnorm(1-(alfa/2))*error
print(paste("Confidence interval:",mean(minus),mean(plus)))
buffon <- function(N,l,d){
a <- 0
b <- pi
U <- runif(N)
theta <- (b-a)*U+a
f <- l*sin(theta)
integralet <- sum((f/N))*(b-a) #the estiamtion
Phit<- integralet/(pi*d)
pie <- (2*l)/(Phit*d)
return(paste("Estimated pi",pie))
}
buffon(10000,1,1)
estpi <- 0
for (i in seq(1, 10000, 10)) {
estpi[i]<-buffon(i,1,1)
}
plot(estpi)
estpi <- 0
for (i in seq(1, 10000, 10)) {
estpi[i]<-buffon(i,1,1)
}
plot(estpi)
estpi <- 1
for (i in seq(1, 10000, 10)) {
estpi[i]<-buffon(i,1,1)
}
plot(estpi)
estpi <- 0
for (i in c(1,seq(10, 10000, 10))) {
estpi[i]<-buffon(i,1,1)
}
plot(estpi)
estpi <- 0
for (i in c(1,seq(10,N,19))) {
estpi[i]<-buffon(i,1,1)
}
plot(estpi)
estpi <- 0
for (i in c(1,seq(10,N,10))) {
estpi[i]<-buffon(i,1,1)
}
plot(estpi)
buffon <- function(N,l,d){
a <- 0
b <- pi
U <- runif(N)
theta <- (b-a)*U+a
f <- l*sin(theta)
integralet <- sum((f/N))*(b-a) #the estiamtion
Phit<- integralet/(pi*d)
pie <- (2*l)/(Phit*d)
return(paste("Estimated pi",pie))
}
estpi <- 0
for (i in c(1,seq(10,N,10))) {
estpi[i]<-buffon(i,1,1)
}
plot(estpi)
lazzarini <- 0
for(i in seq(1,10000,1)){
lazzarini[i] <- Task2(3408,2.5,3)
}
plot(lazzarini)
Task2 <- function(N,l,d){
a <- 0
b <- pi
U <- runif(N)
theta <- (b-a)*U+a
f <- l*sin(theta)
integralet <- sum((f/N))*(b-a) #the estiamtion
Phit<- integralet/(pi*d)
pie <- (2*l)/(Phit*d)
return(pie)
}
#Opgave 4
lazzarini <- 0
for(i in seq(1,10000,1)){
lazzarini[i] <- Task2(3408,2.5,3)
}
plot(lazzarini)
estpi <- 0
for (i in seq(1, 100, 10)) {
estpi[i]<-Task2(i,1,1)
#print(Task2(i,1,1))
}
plot(estpi)
#opgave 1
integralet <- 0
N <- 10000
l <- 1
d <- 1
# estimating the integration
for (i in 1:N) {
a <- 0
b <- pi
U <- runif(N)
theta <- (b-a)*U+a
f <- l*sin(theta)
integralet[i] <- sum((f/N))*(b-a) #the estiamtion
Phit<- integralet[i]/(pi*d)
pie <- (2*l)/(Phit*d)
}
#Variance
varians <- var(integralet)
print(varians)
#Standard Deviation
deviation <- sd(integralet)
#print(deviation)
#Standard Error
error <- deviation/(sqrt(N))
#print(error)
#the 95% confidence interval
alfa = 0.05
plus <- integralet + qnorm(1-(alfa/2))*error
minus <- integralet - qnorm(1-(alfa/2))*error
#print(mean(plus)) #m책ske snydes der med mean
#print(mean(minus)) #m책ske snydes der med mean
#Opgave 2
Task2 <- function(N,l,d){
a <- 0
b <- pi
U <- runif(N)
theta <- (b-a)*U+a
f <- l*sin(theta)
integralet <- sum((f/N))*(b-a) #the estiamtion
Phit<- integralet/(pi*d)
pie <- (2*l)/(Phit*d)
return(pie)
}
#Opgave 3
estpi <- 0
for (i in seq(1, 100, 10)) {
estpi[i]<-Task2(i,1,1)
#print(Task2(i,1,1))
}
plot(estpi)
#Opgave 4
lazzarini <- 0
for(i in seq(1,10000,1)){
lazzarini[i] <- Task2(3408,2.5,3)
}
plot(lazzarini)
lazzarini <- 0
for(i in seq(1,10000,1)){
lazzarini[i] <- Task2(3408,2.5,3)
}
plot(lazzarini)
lazzarini <- 0
for(i in seq(1,10000,1)){
#lazzarini[i] <- Task2(3408,2.5,3)
}
plot(lazzarini)
buffon(1,1,1)
Task2 <- function(N,l,d){
a <- 0
b <- pi
U <- runif(N)
theta <- (b-a)*U+a
f <- l*sin(theta)
integralet <- sum((f/N))*(b-a) #the estiamtion
Phit<- integralet/(pi*d)
pie <- (2*l)/(Phit*d)
cat("The value of pi is : %s", pie)
return(pie)
}
Task2(1,1,1)
---
title: "debug2"
author: "Katrine Eriksen and Katrine Bach"
date: "6 juni 2016"
output: html_document
---
```{r}
#opgave 1
integralet <- 0
N <- 10000
l <- 1
d <- 1
# estimating the integration
for (i in 1:N) {
a <- 0
b <- pi
U <- runif(N)
theta <- (b-a)*U+a
f <- l*sin(theta)
integralet[i] <- sum((f/N))*(b-a) #the estiamtion
Phit<- integralet[i]/(pi*d)
pie <- (2*l)/(Phit*d)
}
#Variance
varians <- var(integralet)
print(varians)
#Standard Deviation
deviation <- sd(integralet)
#print(deviation)
#Standard Error
error <- deviation/(sqrt(N))
#print(error)
#the 95% confidence interval
alfa = 0.05
plus <- integralet + qnorm(1-(alfa/2))*error
minus <- integralet - qnorm(1-(alfa/2))*error
#print(mean(plus)) #m책ske snydes der med mean
#print(mean(minus)) #m책ske snydes der med mean
#Opgave 2
Task2 <- function(N,l,d){
a <- 0
b <- pi
U <- runif(N)
theta <- (b-a)*U+a
f <- l*sin(theta)
integralet <- sum((f/N))*(b-a) #the estiamtion
Phit<- integralet/(pi*d)
pie <- (2*l)/(Phit*d)
return(pie)
}
```
```{r}
#Opgave 3
estpi <- 0
for (i in seq(1, 10000, 10)) {
estpi[i]<-Task2(i,1,1)
#print(Task2(i,1,1))
}
plot(estpi)
```
```{r}
#Opgave 4
lazzarini <- 0
for(i in seq(1,10000,1)){
lazzarini[i] <- Task2(3408,2.5,3)
}
plot(lazzarini)
```
